Excercise 2-1
  Write a program to determine the ranges of char, short, int, an long variables, both signed and unsigned, by printing appropriate values from standard headers and by direct compuation. Harder if you compute them: determine the ranges of various floating-point types
Excercise 2-2
  Write a loop equivalent to the for loop above without using && or ||
Excercise 2-3
  Write a functon htoi(s), which converts a string of hexdeciaml digits (including an optional 0x or oX) into its equivalent integer value. The allowable digits are 0 through 9, a through f, and A through F
Excercise 2-4 *
  Write an alternate version of squeeze(s1, s2) that deletes each character in s1 that matches any character in the string s2
Excercise 2-5 *
  Wrie a function anyh(s1, s2), which returns the first location in the string s1 where any character from the string s2 occurs, or -1 if s1 contains no characters from s2. (The standard library function strpbrk does teh same job but returns a pointer to the location.)
Excercise 2-6 *
  Write a function setbits(x, p, n, y) that returns x with the n bits that begin at position p set to the rightmost n bits of y, leaving the other bits unchanged.
Excercise 2-7 *
  Write function invert(x, p, n) that returns x with the n bits that begin at position p inverted (i.e., 1 changed to 0 and vice versa), leaving the others unchanged.
Excerice 2-8 *
  Write a function rightrot(x, n) that returns the value of the integer x rotated to the right by n bit positions.
Excercise 2-9 *
  In a two's complement number system , x &= (x - 1) deletes the rightmost 1-bit in x. Explain why. Use this observation to write a faster version of bitcount.